/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Thrift;
using Thrift.Protocol;
using Thrift.Transport;
namespace Apache.Hadoop.Hbase.Thrift
{
  public class Mutation 
  {
    public bool isDelete;
    public byte[] column;
    public byte[] value;

    public Isset __isset;
    public struct Isset {
      public bool isDelete;
      public bool column;
      public bool value;
    }

    public Mutation() {
      this.isDelete = false;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      TStruct struc = iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Bool) {
              this.isDelete = iprot.ReadBool();
              this.__isset.isDelete = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              this.column = iprot.ReadBinary();
              this.__isset.column = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              this.value = iprot.ReadBinary();
              this.__isset.value = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("Mutation");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      field.Name = "isDelete";
      field.Type = TType.Bool;
      field.ID = 1;
      oprot.WriteFieldBegin(field);
      oprot.WriteBool(this.isDelete);
      oprot.WriteFieldEnd();
      if (this.column != null) {
        field.Name = "column";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(this.column);
        oprot.WriteFieldEnd();
      }
      if (this.value != null) {
        field.Name = "value";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(this.value);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("Mutation(");
      sb.Append("isDelete: ");
      sb.Append(this.isDelete);
      sb.Append(",column: ");
      sb.Append(this.column);
      sb.Append(",value: ");
      sb.Append(this.value);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
