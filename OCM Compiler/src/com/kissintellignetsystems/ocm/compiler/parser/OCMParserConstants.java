/* Generated By:JJTree&JavaCC: Do not edit this line. OCMParserConstants.java */
package com.kissintellignetsystems.ocm.compiler.parser;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface OCMParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEAN = 9;
  /** RegularExpression Id. */
  int BYTE = 10;
  /** RegularExpression Id. */
  int BYTESTREAM = 11;
  /** RegularExpression Id. */
  int DOUBLE = 12;
  /** RegularExpression Id. */
  int FLOAT = 13;
  /** RegularExpression Id. */
  int INT = 14;
  /** RegularExpression Id. */
  int LONG = 15;
  /** RegularExpression Id. */
  int STRING = 16;
  /** RegularExpression Id. */
  int SUPER_FAMILY = 17;
  /** RegularExpression Id. */
  int DYNAMIC_SUPER_FAMILY = 18;
  /** RegularExpression Id. */
  int MANY_2_MANY = 19;
  /** RegularExpression Id. */
  int KEY = 20;
  /** RegularExpression Id. */
  int COLUMN_FAMILY = 21;
  /** RegularExpression Id. */
  int IDENTIFIER = 22;
  /** RegularExpression Id. */
  int LETTER = 23;
  /** RegularExpression Id. */
  int DIGIT = 24;
  /** RegularExpression Id. */
  int LIT = 25;
  /** RegularExpression Id. */
  int TERM = 26;
  /** RegularExpression Id. */
  int DOT = 27;
  /** RegularExpression Id. */
  int EQUALS = 28;
  /** RegularExpression Id. */
  int QUOTE = 29;
  /** RegularExpression Id. */
  int LEFT_SQUARE_BRACKET = 30;
  /** RegularExpression Id. */
  int RIGHT_SQUARE_BRACKET = 31;
  /** RegularExpression Id. */
  int LEFT_BRACE = 32;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 33;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "<token of kind 7>",
    "\"*/\"",
    "\"Boolean\"",
    "\"Byte\"",
    "\"ByteStream\"",
    "\"Double\"",
    "\"Float\"",
    "\"Int\"",
    "\"Long\"",
    "\"String\"",
    "\"SuperFamily\"",
    "\"DynamicSuperFamily\"",
    "\"Many2Many\"",
    "\"Key\"",
    "\"ColumnFamily\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<LIT>",
    "\";\"",
    "\".\"",
    "\"=\"",
    "\"\\\"\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
  };

}
